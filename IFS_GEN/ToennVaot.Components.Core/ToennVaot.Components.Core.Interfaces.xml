<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ToennVaot.Components.Core.Interfaces</name>
    </assembly>
    <members>
        <member name="T:ToennVaot.Components.Core.Interfaces.IAuditedRecord">
            <summary>
            Interface defines an audited record
            </summary>
        </member>
        <member name="P:ToennVaot.Components.Core.Interfaces.IAuditedRecord.GdprRestrictedAudit">
            <summary>
            Flag indicating if the personal data can be audited or not
            </summary>
            <remarks>Default is false</remarks>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IAuditedRecord.GenerateAuditRecordAsync(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Generate the JSON content string to audit
            </summary>
            <param name="options">The serializer options to use</param>
            <returns>The JSON content</returns>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IDeletableRecord">
            <summary>
            Interface defines a deletable record
            </summary>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IStateRecord">
            <summary>
            Interface defines a state record
            </summary>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IStorageManager`2">
            <summary>
            Defines the storage manager interface
            </summary>
            <typeparam name="T">The database connection provider type</typeparam>
            <typeparam name="TU">The database transaction provider type</typeparam>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IStorageManager`2.GetConnection">
            <summary>
            Get a new database connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IStorageManager`2.GetConnectionWithTransaction">
            <summary>
            Get a new database connection with an associated transaction
            </summary>
            <returns></returns>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IStore">
            <summary>
            Interface defines the based store methods
            </summary>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IStore`2">
            <summary>
            Interface defines the based store methods with model
            </summary>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IStore`2.Add``1(``0,`1)">
            <summary>
            Add a new item to the store
            </summary>
            <typeparam name="T">The model type of the object to add</typeparam>
            <param name="item">The item to add</param>
            <param name="user">The user makes the operation</param>
            <returns>The request result</returns>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IStore`2.Set``1(``0,`1)">
            <summary>
            Set a new item to the store
            </summary>
            <typeparam name="T">The model type of the object to set</typeparam>
            <param name="item">The item to set</param>
            <param name="user">The user makes the operation</param>
            <returns>The request result</returns>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IStoreChangedState`2">
            <summary>
            Interface defines the based store methods with model
            </summary>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IStoreChangedState`2.ChangeState(ToennVaot.Components.Core.Interfaces.IStateRecord,`1)">
            <summary>
            Change the state of the item to the store
            </summary>
            <param name="item">The item to change state</param>
            <param name="user">The user makes the operation</param>
            <returns>The request result</returns>
        </member>
        <member name="T:ToennVaot.Components.Core.Interfaces.IStoreDeletable`2">
            <summary>
            Interface defines the based store methods with model
            </summary>
        </member>
        <member name="M:ToennVaot.Components.Core.Interfaces.IStoreDeletable`2.Delete(ToennVaot.Components.Core.Interfaces.IDeletableRecord,`1)">
            <summary>
            Delete the item to the store
            </summary>
            <param name="item">The item to delete</param>
            <param name="user">The user makes the operation</param>
            <returns>The request result</returns>
        </member>
    </members>
</doc>
